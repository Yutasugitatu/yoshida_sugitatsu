//=============================================================================
//
// ライト [light.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "light.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CLight::CLight()
{
	ZeroMemory(&m_Light, sizeof(D3DLIGHT9));	//ライト
}

//=============================================================================
// デストラクタ
//=============================================================================
CLight::~CLight()
{
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CLight::Init(void)
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();
	//ライトの方向ベクトル
	D3DXVECTOR3 vecDir;
	//ライトの種類を設定
	m_Light.Type = D3DLIGHT_DIRECTIONAL;
	//ライトの拡散光を設定
	m_Light.Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	//ライトの方向を設定x
	vecDir = D3DXVECTOR3(0.0f, -1.0f, 0.0f);
	//正規化する(大きさ1のベクトルにする必要がある)
	D3DXVec3Normalize(&vecDir, &vecDir);
	//方向を指定する
	m_Light.Direction = vecDir;
	//ライトを設定する
	pDevice->SetLight(0, &m_Light);
	//ライトを有効にする
	pDevice->LightEnable(0, TRUE);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CLight::Uninit(void)
{
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CLight::Update(void)
{
}
